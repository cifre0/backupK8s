# Deploys a new Namespace for the MinIO Pod
apiVersion: v1
kind: Namespace
metadata:
  name: minio-dev # Change this value if you want a different namespace name
  labels:
    name: minio-dev # Change this value to match metadata.name
---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
#
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-dev # Change this value to match the namespace metadata.name
spec:
  containers:
  - name: minio
    image: quay.io/minio/minio:latest
    command:
    - /bin/bash
    - -c
    args:
    - minio server /data --console-address :9090
    volumeMounts:
    - mountPath: /data
      name: localvolume # Corresponds to the `spec.volumes` Persistent Volume
  nodeSelector:
    kubernetes.io/hostname: srv-backup # Specify a node label associated to the Worker Node on which you want to deploy the pod.
  volumes:
  - name: localvolume
    hostPath: # MinIO generally recommends using locally-attached volumes
      path: /mnt/DataStore # Specify a path to a local drive or volume on the Kubernetes worker node
      type: DirectoryOrCreate # The path to the last directory must exist

---
apiVersion: v1
kind: Service
metadata:
  name: minio-svc
  namespace: minio-dev
  labels:
    app.kebernetes.io/name: minio
    app: minio
    name: minio
    namespace: minio-dev
spec:
  type: ClusterIP
  selector:
    app: minio
  ports:
    - name: port9000
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: consoleweb
      port: 9090
      protocol: TCP
      targetPort: 9090
  externalIPs:
    - IP_NODE

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-minio
  namespace: minio-dev
  annotations:
spec:
  rules:
  - host: minio.backup.training
    http:
      paths:
      - path:
        backend:
          service:
            name: minio-svc
            port:
              number: 9000
        path: /
        pathType: Prefix
  - host: console.backup.training
    http:
      paths:
      - path:
        backend:
          service:
            name: minio-svc
            port:
              number: 9090
        path: /
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - ip: IP_NODE
